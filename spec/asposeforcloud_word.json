{
  "swagger": "2.0",
  "info": {
    "title": "Aspose.Words for Cloud API Reference",
    "version": "18.6.0"
  },
  "host": "localhost",
  "basePath": "/v1.1",
  "schemes": [],
  "consumes": [
    "application/xml",
    "application/json"
  ],
  "produces": [
    "application/xml",
    "application/json"
  ],
  "paths": {
    "/words/fonts/available": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetAvailableFonts",
        "parameters": [
          {
            "type": "string",
            "name": "FontsLocation",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AvailableFontsResponse"
            },
            "x-nullable": true
          }
        },
        "x-operationId": "GetAvailableFonts"
      }
    },
    "/words/fonts/cache": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "ResetCache",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-operationId": "ResetCache"
      }
    },
    "/words/{name}/bookmarks": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentBookmarks",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BookmarksResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentBookmarks"
      }
    },
    "/words/{name}/bookmarks/{bookmarkName}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentBookmarkByName",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "BookmarkName",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BookmarkResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentBookmarkByName"
      },
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostUpdateDocumentBookmark",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "BookmarkData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookmarkData"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "BookmarkName",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BookmarkResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PostUpdateDocumentBookmark"
      }
    },
    "/words/{name}/{nodePath}/borders": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetBorders",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BordersResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetBorders"
      },
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteBorders",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BordersResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteBorders"
      }
    },
    "/words/{name}/{nodePath}/borders/{index}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetBorder",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BorderResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetBorder"
      },
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteBorder",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BorderResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteBorder"
      },
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "UpdateBorder",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "BorderProperties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Border"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BorderResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "UpdateBorder"
      }
    },
    "/words/{name}/comments": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetComments",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommentsResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetComments"
      },
      "put": {
        "tags": [
          "words"
        ],
        "operationId": "PutComment",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "Comment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommentResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PutComment"
      }
    },
    "/words/{name}/comments/{commentIndex}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetComment",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "CommentIndex",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "format": "int32"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommentResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetComment"
      },
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteComment",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "CommentIndex",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "format": "int32"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteComment"
      },
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostComment",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "CommentIndex",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "format": "int32"
          },
          {
            "name": "Comment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommentResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PostComment"
      }
    },
    "/words/{name}/documentProperties": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentProperties",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentPropertiesResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentProperties"
      }
    },
    "/words/{name}/documentProperties/{propertyName}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentProperty",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "PropertyName",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentPropertyResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentProperty"
      },
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "CreateOrUpdateDocumentProperty",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "PropertyName",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "Property",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentProperty"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentPropertyResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "CreateOrUpdateDocumentProperty"
      },
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteDocumentProperty",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "PropertyName",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteDocumentProperty"
      }
    },
    "/words/{name}/{nodePath}/drawingObjects": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentDrawingObjects",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DrawingObjectsResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentDrawingObjects"
      },
      "put": {
        "tags": [
          "words"
        ],
        "operationId": "PutDrawingObject",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "DrawingObject",
            "in": "formData",
            "required": true,
            "description": "Drawing object parameters"
          },
          {
            "type": "file",
            "name": "ImageFile",
            "in": "formData",
            "required": true,
            "description": "File with image"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DrawingObjectResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PutDrawingObject"
      }
    },
    "/words/{name}/{nodePath}/drawingObjects/{index}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentDrawingObjectByIndex",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DrawingObjectResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentDrawingObjectByIndex"
      },
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteDrawingObject",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteDrawingObject"
      },
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostDrawingObject",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "DrawingObject",
            "in": "formData",
            "required": true,
            "description": "Drawing object parameters"
          },
          {
            "type": "file",
            "name": "ImageFile",
            "in": "formData",
            "required": true,
            "description": "File with image"
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DrawingObjectResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PostDrawingObject"
      }
    },
    "/words/{name}/{nodePath}/drawingObjects/{index}/imageData": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentDrawingObjectImageData",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "file",
              "description": "File with result of operation"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-binary-result": "true",
        "x-operationId": "GetDocumentDrawingObjectImageData"
      }
    },
    "/words/{name}/{nodePath}/drawingObjects/{index}/oleData": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentDrawingObjectOleData",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "file",
              "description": "File with result of operation"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-binary-result": "true",
        "x-operationId": "GetDocumentDrawingObjectOleData"
      }
    },
    "/words/{name}/updateFields": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostUpdateDocumentFields",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest",
        "x-operationId": "PostUpdateDocumentFields"
      }
    },
    "/words/{name}/{nodePath}/fields": {
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteFields",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteFields"
      },
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetFields",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FieldsResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetFields"
      },
      "put": {
        "tags": [
          "words"
        ],
        "operationId": "PutField",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "Field",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Field"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "InsertBeforeNode",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FieldResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PutField"
      }
    },
    "/words/{name}/{nodePath}/fields/{index}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetField",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FieldResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetField"
      },
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteField",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteField"
      },
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostField",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "Field",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Field"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FieldResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PostField"
      }
    },
    "/words/{name}/{nodePath}/footnotes": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetFootnotes",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FootnotesResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetFootnotes"
      },
      "put": {
        "tags": [
          "words"
        ],
        "operationId": "PutFootnote",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "FootnoteDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Footnote"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FootnoteResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PutFootnote"
      }
    },
    "/words/{name}/{nodePath}/footnotes/{index}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetFootnote",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FootnoteResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetFootnote"
      },
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteFootnote",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteFootnote"
      },
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostFootnote",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "FootnoteDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Footnote"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FootnoteResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PostFootnote"
      }
    },
    "/words/{name}/{nodePath}/formfields": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetFormFields",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FormFieldsResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetFormFields"
      },
      "put": {
        "tags": [
          "words"
        ],
        "operationId": "PutFormField",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "FormField",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormField"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "InsertBeforeNode",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FormFieldResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PutFormField"
      }
    },
    "/words/{name}/{nodePath}/formfields/{index}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetFormField",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FormFieldResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetFormField"
      },
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostFormField",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "FormField",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormField"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FormFieldResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PostFormField"
      },
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteFormField",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteFormField"
      }
    },
    "/words/{name}/{sectionPath}/headersfooters": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetHeaderFooters",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "SectionPath",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "FilterByType",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HeaderFootersResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetHeaderFooters"
      },
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteHeadersFooters",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "SectionPath",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "HeadersFootersTypes",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteHeadersFooters"
      },
      "put": {
        "tags": [
          "words"
        ],
        "operationId": "PutHeaderFooter",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "HeaderFooterType",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "SectionPath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HeaderFooterResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PutHeaderFooter"
      }
    },
    "/words/{name}/headersfooters/{headerFooterIndex}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetHeaderFooter",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "HeaderFooterIndex",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "format": "int32"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "FilterByType",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HeaderFooterResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetHeaderFooter"
      }
    },
    "/words/{name}/sections/{sectionIndex}/headersfooters/{headerFooterIndex}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetHeaderFooterOfSection",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "HeaderFooterIndex",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "format": "int32"
          },
          {
            "type": "integer",
            "name": "SectionIndex",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "format": "int32"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "FilterByType",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HeaderFooterResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetHeaderFooterOfSection"
      }
    },
    "/words/{name}/{sectionPath}/headersfooters/{index}": {
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteHeaderFooter",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "SectionPath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteHeaderFooter"
      }
    },
    "/words/{name}/hyperlinks": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentHyperlinks",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HyperlinksResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentHyperlinks"
      }
    },
    "/words/{name}/hyperlinks/{hyperlinkIndex}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentHyperlinkByIndex",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "HyperlinkIndex",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "format": "int32"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HyperlinkResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentHyperlinkByIndex"
      }
    },
    "/words/{name}/macros": {
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteDocumentMacros",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteDocumentMacros"
      }
    },
    "/words/{name}/{nodePath}/OfficeMathObjects": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetOfficeMathObjects",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OfficeMathObjectsResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetOfficeMathObjects"
      }
    },
    "/words/{name}/{nodePath}/OfficeMathObjects/{index}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetOfficeMathObject",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OfficeMathObjectResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetOfficeMathObject"
      },
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteOfficeMathObject",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteOfficeMathObject"
      }
    },
    "/words/{name}/{nodePath}/paragraphs": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentParagraphs",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ParagraphLinkCollectionResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentParagraphs"
      },
      "put": {
        "tags": [
          "words"
        ],
        "operationId": "PutParagraph",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "Paragraph",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParagraphInsert"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "InsertBeforeNode",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ParagraphResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PutParagraph"
      }
    },
    "/words/{name}/{nodePath}/paragraphs/{index}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentParagraph",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ParagraphResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentParagraph"
      },
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteParagraph",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteParagraph"
      }
    },
    "/words/{name}/{paragraphPath}/runs": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentParagraphRuns",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "ParagraphPath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RunsResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentParagraphRuns"
      },
      "put": {
        "tags": [
          "words"
        ],
        "operationId": "PutRun",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "ParagraphPath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "name": "Run",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Run"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "InsertBeforeNode",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RunResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PutRun"
      }
    },
    "/words/{name}/{paragraphPath}/runs/{index}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentParagraphRun",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "ParagraphPath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RunResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentParagraphRun"
      },
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteRun",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "ParagraphPath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteRun"
      },
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostRun",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "Run",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Run"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "ParagraphPath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RunResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PostRun"
      }
    },
    "/words/{name}/{paragraphPath}/runs/{index}/font": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentParagraphRunFont",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "ParagraphPath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FontResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentParagraphRunFont"
      },
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostDocumentParagraphRunFont",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "FontDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Font"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "ParagraphPath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FontResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PostDocumentParagraphRunFont"
      }
    },
    "/words/{name}/sections": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetSections",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SectionLinkCollectionResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetSections"
      }
    },
    "/words/{name}/sections/{sectionIndex}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetSection",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "SectionIndex",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "format": "int32"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SectionResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetSection"
      }
    },
    "/words/{name}/sections/{sectionIndex}/pageSetup": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetSectionPageSetup",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "SectionIndex",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "format": "int32"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SectionPageSetupResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetSectionPageSetup"
      },
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "UpdateSectionPageSetup",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "SectionIndex",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "format": "int32"
          },
          {
            "name": "PageSetup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PageSetup"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SectionPageSetupResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "UpdateSectionPageSetup"
      }
    },
    "/words/{name}/{nodePath}/tables": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetTables",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TableLinkCollectionResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetTables"
      },
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "InsertTable",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "name": "Table",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TableInsert"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TableResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "InsertTable"
      }
    },
    "/words/{name}/{nodePath}/tables/{index}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetTable",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TableResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetTable"
      },
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteTable",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteTable"
      }
    },
    "/words/{name}/{nodePath}/tables/{index}/properties": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetTableProperties",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TablePropertiesResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetTableProperties"
      },
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "UpdateTableProperties",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "name": "Properties",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TableProperties"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TablePropertiesResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "UpdateTableProperties"
      }
    },
    "/words/{name}/{tablePath}/rows/{index}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetTableRow",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "TablePath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TableRowResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetTableRow"
      },
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteTableRow",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "TablePath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteTableRow"
      }
    },
    "/words/{name}/{tablePath}/rows": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "InsertTableRow",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "TablePath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "name": "Row",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TableRowInsert"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TableRowResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "InsertTableRow"
      }
    },
    "/words/{name}/{tablePath}/rows/{index}/rowformat": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetTableRowFormat",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "TablePath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TableRowFormatResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetTableRowFormat"
      },
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "UpdateTableRowFormat",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "TablePath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "name": "Format",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TableRowFormat"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TableRowFormatResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "UpdateTableRowFormat"
      }
    },
    "/words/{name}/{tableRowPath}/cells/{index}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetTableCell",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "TableRowPath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TableCellResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetTableCell"
      },
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteTableCell",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "TableRowPath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsposeResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteTableCell"
      }
    },
    "/words/{name}/{tableRowPath}/cells": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "InsertTableCell",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "TableRowPath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "name": "Cell",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TableCellInsert"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TableCellResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "InsertTableCell"
      }
    },
    "/words/{name}/{tableRowPath}/cells/{index}/cellformat": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetTableCellFormat",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "TableRowPath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TableCellFormatResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetTableCellFormat"
      },
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "UpdateTableCellFormat",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "TableRowPath",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "name": "Format",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TableCellFormat"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TableCellFormatResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "UpdateTableCellFormat"
      }
    },
    "/words/{name}/textItems": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentTextItems",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TextItemsResponse"
            },
            "x-nullable": true
          }
        },
        "deprecated": true,
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentTextItems"
      }
    },
    "/words/{name}/replaceText": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostReplaceText",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "ReplaceText",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReplaceTextRequest"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReplaceTextResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PostReplaceText"
      }
    },
    "/words/{name}/watermark/insertImage": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostInsertDocumentWatermarkImage",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "file",
            "name": "ImageFile",
            "in": "formData",
            "description": "File with image"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          },
          {
            "type": "number",
            "name": "RotationAngle",
            "in": "query",
            "x-nullable": false,
            "format": "double",
            "default": 0.0
          },
          {
            "type": "string",
            "name": "Image",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PostInsertDocumentWatermarkImage"
      }
    },
    "/words/{name}/watermark/insertText": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostInsertDocumentWatermarkText",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "name": "WatermarkText",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WatermarkText"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PostInsertDocumentWatermarkText"
      }
    },
    "/words/{name}/watermark": {
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteDocumentWatermark",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "DeleteDocumentWatermark"
      }
    },
    "/words/{name}/appendDocument": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostAppendDocument",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "DocumentList",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentEntryList"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PostAppendDocument"
      }
    },
    "/words/classify": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "Classify",
        "parameters": [
          {
            "type": "string",
            "name": "Text",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "BestClassesCount",
            "in": "query",
            "x-nullable": true,
            "default": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClassificationResponse"
            },
            "x-nullable": true
          }
        },
        "x-operationId": "Classify"
      }
    },
    "/words/{documentName}/classify": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "ClassifyDocument",
        "parameters": [
          {
            "type": "string",
            "name": "DocumentName",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "BestClassesCount",
            "in": "query",
            "x-nullable": true,
            "default": "1"
          },
          {
            "type": "string",
            "name": "Taxonomy",
            "in": "query",
            "x-nullable": true,
            "default": "default"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClassificationResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest",
        "x-operationId": "ClassifyDocument"
      }
    },
    "/words/{name}/compareDocument": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostCompareDocument",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "CompareData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompareData"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest",
        "x-operationId": "PostCompareDocument"
      }
    },
    "/words/{name}/executeTemplate": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostExecuteTemplate",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Data",
            "in": "formData",
            "required": true,
            "description": "Mail merge data"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "Cleanup",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "UseWholeParagraphAsRegion",
            "in": "query",
            "x-nullable": false,
            "default": true
          },
          {
            "type": "boolean",
            "name": "WithRegions",
            "in": "query",
            "x-nullable": false,
            "default": true
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest, ICanSpecifyMailMergeParametersRequest",
        "x-operationId": "PostExecuteTemplate"
      }
    },
    "/words/{name}/executeMailMerge": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostDocumentExecuteMailMerge",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Data",
            "in": "formData",
            "description": "Mail merge data"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "boolean",
            "name": "WithRegions",
            "in": "query",
            "x-nullable": false,
            "default": false
          },
          {
            "type": "string",
            "name": "MailMergeDataFile",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Cleanup",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "UseWholeParagraphAsRegion",
            "in": "query",
            "x-nullable": false,
            "default": true
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest, ICanSpecifyMailMergeParametersRequest",
        "x-operationId": "PostDocumentExecuteMailMerge"
      }
    },
    "/words/executeTemplate": {
      "put": {
        "tags": [
          "words"
        ],
        "operationId": "PutExecuteTemplateOnline",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "Template",
            "in": "formData",
            "required": true,
            "description": "File with template"
          },
          {
            "type": "file",
            "name": "Data",
            "in": "formData",
            "required": true,
            "description": "File with mailmerge data"
          },
          {
            "type": "string",
            "name": "Cleanup",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "UseWholeParagraphAsRegion",
            "in": "query",
            "x-nullable": false,
            "default": true
          },
          {
            "type": "boolean",
            "name": "WithRegions",
            "in": "query",
            "x-nullable": false,
            "default": true
          },
          {
            "type": "string",
            "name": "DocumentFileName",
            "in": "query",
            "x-nullable": true,
            "default": "template"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "file",
              "description": "File with result of operation"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IPutExecuteRequest",
        "x-binary-result": "true",
        "x-operationId": "PutExecuteTemplateOnline"
      }
    },
    "/words/executeMailMerge": {
      "put": {
        "tags": [
          "words"
        ],
        "operationId": "PutExecuteMailMergeOnline",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "Template",
            "in": "formData",
            "required": true,
            "description": "File with template"
          },
          {
            "type": "file",
            "name": "Data",
            "in": "formData",
            "required": true,
            "description": "File with mailmerge data"
          },
          {
            "type": "boolean",
            "name": "WithRegions",
            "in": "query",
            "x-nullable": false,
            "default": false
          },
          {
            "type": "string",
            "name": "Cleanup",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "DocumentFileName",
            "in": "query",
            "x-nullable": true,
            "default": "template"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "file",
              "description": "File with result of operation"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IPutExecuteRequest",
        "x-binary-result": "true",
        "x-operationId": "PutExecuteMailMergeOnline"
      }
    },
    "/words/mailMergeFieldNames": {
      "put": {
        "tags": [
          "words"
        ],
        "operationId": "PutDocumentFieldNames",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "Template",
            "in": "formData",
            "required": true,
            "description": "File with template"
          },
          {
            "type": "boolean",
            "name": "UseNonMergeFields",
            "in": "query",
            "x-nullable": false,
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FieldNamesResponse"
            },
            "x-nullable": true
          }
        },
        "x-operationId": "PutDocumentFieldNames"
      }
    },
    "/words/{name}/mailMergeFieldNames": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentFieldNames",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "boolean",
            "name": "UseNonMergeFields",
            "in": "query",
            "x-nullable": false,
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FieldNamesResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentFieldNames"
      }
    },
    "/words/{name}/insertPageNumbers": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostInsertPageNumbers",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "PageNumber",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PageNumber"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "RevisionAuthor",
            "in": "query",
            "description": "Initials of the author to use for revisions.If you set this parameter and then make some changes to the document programmatically, save the document and later open the document in MS Word you will see these changes as revisions."
          },
          {
            "type": "string",
            "name": "RevisionDateTime",
            "in": "query",
            "description": "The date and time to use for revisions."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, ICanSaveRevisionRequest, IWordDocumentRequest",
        "x-operationId": "PostInsertPageNumbers"
      }
    },
    "/words/{name}/protection": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentProtection",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProtectionDataResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentProtection"
      },
      "put": {
        "tags": [
          "words"
        ],
        "operationId": "PutProtectDocument",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "ProtectionRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProtectionRequest"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProtectionDataResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest",
        "x-operationId": "PutProtectDocument"
      },
      "delete": {
        "tags": [
          "words"
        ],
        "operationId": "DeleteUnprotectDocument",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "ProtectionRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProtectionRequest"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProtectionDataResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest",
        "x-operationId": "DeleteUnprotectDocument"
      },
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostChangeDocumentProtection",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "ProtectionRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProtectionRequest"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProtectionDataResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest",
        "x-operationId": "PostChangeDocumentProtection"
      }
    },
    "/words/{name}/revisions/acceptAll": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "AcceptAllRevisions",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RevisionsModificationResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest",
        "x-operationId": "AcceptAllRevisions"
      }
    },
    "/words/{name}/revisions/rejectAll": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "RejectAllRevisions",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RevisionsModificationResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest",
        "x-operationId": "RejectAllRevisions"
      }
    },
    "/words/{name}/search": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "Search",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Pattern",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SearchResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest",
        "x-operationId": "Search"
      }
    },
    "/words/{name}/split": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostSplitDocument",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "Format",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "From",
            "in": "query",
            "x-nullable": true,
            "format": "int32"
          },
          {
            "type": "integer",
            "name": "To",
            "in": "query",
            "x-nullable": true,
            "format": "int32"
          },
          {
            "type": "boolean",
            "name": "ZipOutput",
            "in": "query",
            "x-nullable": false,
            "default": false
          },
          {
            "type": "string",
            "name": "FontsLocation",
            "in": "query",
            "description": "Folder in filestorage with custom fonts."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SplitDocumentResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest, ICanUseCustomFontsRequest",
        "x-operationId": "PostSplitDocument"
      }
    },
    "/words/{name}/statistics": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentStatistics",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "boolean",
            "name": "IncludeComments",
            "in": "query",
            "x-nullable": false,
            "default": false
          },
          {
            "type": "boolean",
            "name": "IncludeFootnotes",
            "in": "query",
            "x-nullable": false,
            "default": false
          },
          {
            "type": "boolean",
            "name": "IncludeTextInShapes",
            "in": "query",
            "x-nullable": false,
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StatDataResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest",
        "x-operationId": "GetDocumentStatistics"
      }
    },
    "/words/{documentName}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocument",
        "parameters": [
          {
            "type": "string",
            "name": "DocumentName",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentResponse"
            },
            "x-nullable": true
          }
        },
        "x-operationId": "GetDocument"
      }
    },
    "/words/loadWebDocument": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostLoadWebDocument",
        "parameters": [
          {
            "name": "Data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoadWebDocumentData"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SaveResponse"
            },
            "x-nullable": true
          }
        },
        "x-operationId": "PostLoadWebDocument"
      }
    },
    "/words/create": {
      "put": {
        "tags": [
          "words"
        ],
        "operationId": "PutCreateDocument",
        "parameters": [
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "FileName",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentResponse"
            },
            "x-nullable": true
          }
        },
        "x-operationId": "PutCreateDocument"
      }
    },
    "/words/{name}/pages/{pageIndex}/render": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "RenderPage",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "PageIndex",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "format": "int32"
          },
          {
            "type": "string",
            "name": "Format",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "FontsLocation",
            "in": "query",
            "description": "Folder in filestorage with custom fonts."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "file",
              "description": "File with result of operation"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest, ICanUseCustomFontsRequest",
        "x-binary-result": "true",
        "x-operationId": "RenderPage"
      }
    },
    "/words/{name}/{nodePath}/paragraphs/{index}/render": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "RenderParagraph",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Format",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "FontsLocation",
            "in": "query",
            "description": "Folder in filestorage with custom fonts."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "file",
              "description": "File with result of operation"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest, ICanUseCustomFontsRequest",
        "x-binary-result": "true",
        "x-operationId": "RenderParagraph"
      }
    },
    "/words/{name}/{nodePath}/tables/{index}/render": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "RenderTable",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Format",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "FontsLocation",
            "in": "query",
            "description": "Folder in filestorage with custom fonts."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "file",
              "description": "File with result of operation"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest, ICanUseCustomFontsRequest",
        "x-binary-result": "true",
        "x-operationId": "RenderTable"
      }
    },
    "/words/{name}/{nodePath}/drawingObjects/{index}/render": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "RenderDrawingObject",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Format",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "FontsLocation",
            "in": "query",
            "description": "Folder in filestorage with custom fonts."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "file",
              "description": "File with result of operation"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest, ICanUseCustomFontsRequest",
        "x-binary-result": "true",
        "x-operationId": "RenderDrawingObject"
      }
    },
    "/words/{name}/{nodePath}/OfficeMathObjects/{index}/render": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "RenderMathObject",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Format",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Index",
            "in": "path",
            "required": true,
            "description": "Object's index"
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "NodePath",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "FontsLocation",
            "in": "query",
            "description": "Folder in filestorage with custom fonts."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "file",
              "description": "File with result of operation"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest, ICanUseCustomFontsRequest",
        "x-binary-result": "true",
        "x-operationId": "RenderMathObject"
      }
    },
    "/words/{name}": {
      "get": {
        "tags": [
          "words"
        ],
        "operationId": "GetDocumentWithFormat",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Format",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "OutPath",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "FontsLocation",
            "in": "query",
            "description": "Folder in filestorage with custom fonts."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "file",
              "description": "File with result of operation"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "IWordDocumentRequest, ICanUseCustomFontsRequest, ICanSpecifyOutputFormatRequest",
        "x-binary-result": "true",
        "x-operationId": "GetDocumentWithFormat"
      }
    },
    "/words/convert": {
      "put": {
        "tags": [
          "words"
        ],
        "operationId": "PutConvertDocument",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "Document",
            "in": "formData",
            "required": true,
            "description": "Converting document"
          },
          {
            "type": "string",
            "name": "Format",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "OutPath",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "DocumentFileName",
            "in": "query",
            "x-nullable": true,
            "default": "sourceFilename"
          },
          {
            "type": "string",
            "name": "FontsLocation",
            "in": "query",
            "description": "Folder in filestorage with custom fonts."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "file",
              "description": "File with result of operation"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanUseCustomFontsRequest, ICanSpecifyOutputFormatRequest",
        "x-binary-result": "true",
        "x-operationId": "PutConvertDocument"
      }
    },
    "/words/{name}/saveAs/tiff": {
      "put": {
        "tags": [
          "words"
        ],
        "operationId": "PutDocumentSaveAsTiff",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "SaveOptions",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TiffSaveOptionsData"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "ResultFile",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "UseAntiAliasing",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "UseHighQualityRendering",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "number",
            "name": "ImageBrightness",
            "in": "query",
            "x-nullable": true,
            "format": "double"
          },
          {
            "type": "string",
            "name": "ImageColorMode",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "number",
            "name": "ImageContrast",
            "in": "query",
            "x-nullable": true,
            "format": "double"
          },
          {
            "type": "string",
            "name": "NumeralFormat",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "PageCount",
            "in": "query",
            "x-nullable": true,
            "format": "int32"
          },
          {
            "type": "integer",
            "name": "PageIndex",
            "in": "query",
            "x-nullable": true,
            "format": "int32"
          },
          {
            "type": "string",
            "name": "PaperColor",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "PixelFormat",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "number",
            "name": "Resolution",
            "in": "query",
            "x-nullable": true,
            "format": "double"
          },
          {
            "type": "number",
            "name": "Scale",
            "in": "query",
            "x-nullable": true,
            "format": "double"
          },
          {
            "type": "string",
            "name": "TiffCompression",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "DmlRenderingMode",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "DmlEffectsRenderingMode",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "TiffBinarizationMethod",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "ZipOutput",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "FontsLocation",
            "in": "query",
            "description": "Folder in filestorage with custom fonts."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SaveResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest, ICanUseCustomFontsRequest",
        "x-operationId": "PutDocumentSaveAsTiff"
      }
    },
    "/words/{name}/saveAs": {
      "post": {
        "tags": [
          "words"
        ],
        "operationId": "PostDocumentSaveAs",
        "parameters": [
          {
            "type": "string",
            "name": "Name",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "SaveOptionsData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveOptionsData"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Folder",
            "in": "query",
            "description": "Original document folder."
          },
          {
            "type": "string",
            "name": "Storage",
            "in": "query",
            "description": "File storage, which have to be used."
          },
          {
            "type": "string",
            "name": "LoadEncoding",
            "in": "query",
            "description": "Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML."
          },
          {
            "type": "string",
            "name": "Password",
            "in": "query",
            "description": "Password for opening an encrypted document."
          },
          {
            "type": "string",
            "name": "DestFileName",
            "in": "query",
            "description": "Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved as the source document."
          },
          {
            "type": "string",
            "name": "FontsLocation",
            "in": "query",
            "description": "Folder in filestorage with custom fonts."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SaveResponse"
            },
            "x-nullable": true
          }
        },
        "x-csharp-implements": "ICanModifyDocumentRequest, IWordDocumentRequest, ICanUseCustomFontsRequest",
        "x-operationId": "PostDocumentSaveAs"
      }
    }
  },
  "definitions": {
    "AvailableFontsResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "AdditionalFonts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FontInfo"
              }
            },
            "CustomFonts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FontInfo"
              }
            },
            "SystemFonts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FontInfo"
              }
            }
          }
        }
      ]
    },
    "FontInfo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "FontFamilyName": {
          "type": "string"
        },
        "FullFontName": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "FilePath": {
          "type": "string"
        }
      }
    },
    "AsposeResponse": {
      "type": "object",
      "discriminator": "Type",
      "additionalProperties": false,
      "required": [
        "Code"
      ],
      "properties": {
        "Code": {
          "type": "integer",
          "format": "int32"
        },
        "Status": {
          "type": "string"
        }
      }
    },
    "BookmarksResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Bookmarks": {
              "$ref": "#/definitions/Bookmarks"
            }
          }
        }
      ]
    },
    "Bookmarks": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "BookmarkList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Bookmark"
              }
            }
          }
        }
      ]
    },
    "Bookmark": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string"
            },
            "Text": {
              "type": "string"
            }
          }
        }
      ]
    },
    "LinkElement": {
      "type": "object",
      "discriminator": "Type",
      "additionalProperties": false,
      "properties": {
        "link": {
          "$ref": "#/definitions/WordsApiLink"
        }
      }
    },
    "WordsApiLink": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/Link"
        },
        {
          "type": "object"
        }
      ]
    },
    "Link": {
      "type": "object",
      "discriminator": "Type",
      "additionalProperties": false,
      "properties": {
        "Href": {
          "type": "string"
        },
        "Rel": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      }
    },
    "BookmarkResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Bookmark": {
              "$ref": "#/definitions/Bookmark"
            }
          }
        }
      ]
    },
    "BookmarkData": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": "string"
        },
        "Text": {
          "type": "string"
        }
      }
    },
    "BordersResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Borders": {
              "$ref": "#/definitions/BordersCollection"
            }
          }
        }
      ]
    },
    "BordersCollection": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "List": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Border"
              }
            }
          }
        }
      ]
    },
    "Border": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "BorderType": {
              "enum": [
                "Bottom",
                "Left",
                "Right",
                "Top",
                "Horizontal",
                "Vertical",
                "DiagonalDown",
                "DiagonalUp",
                "None"
              ]
            },
            "Color": {
              "$ref": "#/definitions/XmlColor"
            },
            "DistanceFromText": {
              "type": "number",
              "format": "double"
            },
            "LineStyle": {
              "enum": [
                "None",
                "Single",
                "Thick",
                "Double",
                "Hairline",
                "Dot",
                "DashLargeGap",
                "DotDash",
                "DotDotDash",
                "Triple",
                "ThinThickSmallGap",
                "ThickThinSmallGap",
                "ThinThickThinSmallGap",
                "ThinThickMediumGap",
                "ThickThinMediumGap",
                "ThinThickThinMediumGap",
                "ThinThickLargeGap",
                "ThickThinLargeGap",
                "ThinThickThinLargeGap",
                "Wave",
                "DoubleWave",
                "DashSmallGap",
                "DashDotStroker",
                "Emboss3D",
                "Engrave3D",
                "Outset",
                "Inset"
              ]
            },
            "LineWidth": {
              "type": "number",
              "format": "double"
            },
            "Shadow": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "XmlColor": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Alpha"
      ],
      "properties": {
        "Web": {
          "type": "string"
        },
        "Alpha": {
          "type": "integer",
          "format": "byte"
        }
      }
    },
    "BorderResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Border": {
              "$ref": "#/definitions/Border"
            }
          }
        }
      ]
    },
    "CommentsResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Comments": {
              "$ref": "#/definitions/CommentsCollection"
            }
          }
        }
      ]
    },
    "CommentsCollection": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "CommentList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          }
        }
      ]
    },
    "Comment": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/CommentLink"
        },
        {
          "type": "object",
          "properties": {
            "Author": {
              "type": "string"
            },
            "Content": {
              "$ref": "#/definitions/StoryChildNodes"
            },
            "DateTime": {
              "type": "string",
              "format": "date-time"
            },
            "Initial": {
              "type": "string"
            },
            "RangeEnd": {
              "$ref": "#/definitions/DocumentPosition"
            },
            "RangeStart": {
              "$ref": "#/definitions/DocumentPosition"
            },
            "Text": {
              "type": "string"
            }
          }
        }
      ]
    },
    "DocumentPosition": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Node": {
          "$ref": "#/definitions/NodeLink"
        },
        "Offset": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NodeLink": {
      "type": "null",
      "discriminator": "Type",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "NodeId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "StoryChildNodes": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ChildNodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeLink"
          }
        }
      }
    },
    "CommentLink": {
      "type": "null",
      "discriminator": "Type",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object"
        }
      ]
    },
    "CommentResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Comment": {
              "$ref": "#/definitions/Comment"
            }
          }
        }
      ]
    },
    "DocumentPropertiesResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "DocumentProperties": {
              "$ref": "#/definitions/DocumentProperties"
            }
          }
        }
      ]
    },
    "DocumentProperties": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "List": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentProperty"
              }
            }
          }
        }
      ]
    },
    "DocumentProperty": {
      "type": "null",
      "additionalProperties": false,
      "required": [
        "BuiltIn"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "BuiltIn": {
              "type": "boolean"
            },
            "Name": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          }
        }
      ]
    },
    "DocumentPropertyResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "DocumentProperty": {
              "$ref": "#/definitions/DocumentProperty"
            }
          }
        }
      ]
    },
    "DrawingObjectsResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "DrawingObjects": {
              "$ref": "#/definitions/DrawingObjectCollection"
            }
          }
        }
      ]
    },
    "DrawingObjectCollection": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "List": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkElement"
              }
            }
          }
        }
      ]
    },
    "DrawingObjectResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "DrawingObject": {
              "$ref": "#/definitions/DrawingObject"
            }
          }
        }
      ]
    },
    "DrawingObject": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingObjectLink"
        },
        {
          "type": "object",
          "properties": {
            "Height": {
              "type": "number",
              "format": "double"
            },
            "ImageDataLink": {
              "$ref": "#/definitions/WordsApiLink"
            },
            "Left": {
              "type": "number",
              "format": "double"
            },
            "OleDataLink": {
              "$ref": "#/definitions/WordsApiLink"
            },
            "RelativeHorizontalPosition": {
              "enum": [
                "Margin",
                "Page",
                "Column",
                "Default",
                "Character",
                "LeftMargin",
                "RightMargin",
                "InsideMargin",
                "OutsideMargin"
              ]
            },
            "RelativeVerticalPosition": {
              "enum": [
                "Margin",
                "TableDefault",
                "Page",
                "Paragraph",
                "TextFrameDefault",
                "Line",
                "TopMargin",
                "BottomMargin",
                "InsideMargin",
                "OutsideMargin"
              ]
            },
            "RenderLinks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WordsApiLink"
              }
            },
            "Top": {
              "type": "number",
              "format": "double"
            },
            "Width": {
              "type": "number",
              "format": "double"
            },
            "WrapType": {
              "enum": [
                "Inline",
                "TopBottom",
                "Square",
                "None",
                "Tight",
                "Through"
              ]
            }
          }
        }
      ]
    },
    "DrawingObjectLink": {
      "type": "null",
      "discriminator": "Type",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/NodeLink"
        },
        {
          "type": "object"
        }
      ]
    },
    "DocumentResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Document": {
              "$ref": "#/definitions/Document"
            }
          }
        }
      ]
    },
    "Document": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "SourceFormat",
        "IsEncrypted",
        "IsSigned"
      ],
      "properties": {
        "Links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "FileName": {
          "type": "string"
        },
        "SourceFormat": {
          "enum": [
            "Unknown",
            "Doc",
            "Dot",
            "DocPreWord60",
            "Docx",
            "Docm",
            "Dotx",
            "Dotm",
            "FlatOpc",
            "Rtf",
            "WordML",
            "Html",
            "Mhtml",
            "Epub",
            "Text",
            "Odt",
            "Ott",
            "Pdf",
            "Xps",
            "Tiff",
            "Svg"
          ]
        },
        "IsEncrypted": {
          "type": "boolean"
        },
        "IsSigned": {
          "type": "boolean"
        },
        "DocumentProperties": {
          "$ref": "#/definitions/DocumentProperties"
        }
      }
    },
    "FieldResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Field": {
              "$ref": "#/definitions/Field"
            }
          }
        }
      ]
    },
    "Field": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FieldLink"
        },
        {
          "type": "object",
          "properties": {
            "LocaleId": {
              "type": "string"
            },
            "Result": {
              "type": "string"
            }
          }
        }
      ]
    },
    "FieldLink": {
      "type": "null",
      "discriminator": "Type",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/NodeLink"
        },
        {
          "type": "object",
          "properties": {
            "FieldCode": {
              "type": "string"
            }
          }
        }
      ]
    },
    "FieldsResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Fields": {
              "$ref": "#/definitions/FieldCollection"
            }
          }
        }
      ]
    },
    "FieldCollection": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "List": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Field"
              }
            }
          }
        }
      ]
    },
    "FootnotesResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Footnotes": {
              "$ref": "#/definitions/FootnoteCollection"
            }
          }
        }
      ]
    },
    "FootnoteCollection": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "List": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Footnote"
              }
            }
          }
        }
      ]
    },
    "Footnote": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FootnoteLink"
        },
        {
          "type": "object",
          "properties": {
            "Content": {
              "$ref": "#/definitions/StoryChildNodes"
            },
            "FootnoteType": {
              "enum": [
                "Footnote",
                "Endnote"
              ]
            },
            "Position": {
              "$ref": "#/definitions/DocumentPosition"
            },
            "ReferenceMark": {
              "type": "string"
            },
            "Text": {
              "type": "string"
            }
          }
        }
      ]
    },
    "FootnoteLink": {
      "type": "null",
      "discriminator": "Type",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/NodeLink"
        },
        {
          "type": "object"
        }
      ]
    },
    "FootnoteResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Footnote": {
              "$ref": "#/definitions/Footnote"
            }
          }
        }
      ]
    },
    "FormFieldsResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "FormFields": {
              "$ref": "#/definitions/FormFieldCollection"
            }
          }
        }
      ]
    },
    "FormFieldCollection": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "List": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FormField"
              }
            }
          }
        }
      ]
    },
    "FormField": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/NodeLink"
        },
        {
          "type": "object",
          "properties": {
            "CalculateOnExit": {
              "type": "boolean"
            },
            "Enabled": {
              "type": "boolean"
            },
            "EntryMacro": {
              "type": "string"
            },
            "ExitMacro": {
              "type": "string"
            },
            "HelpText": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            },
            "OwnHelp": {
              "type": "boolean"
            },
            "OwnStatus": {
              "type": "boolean"
            },
            "StatusText": {
              "type": "string"
            }
          }
        }
      ]
    },
    "FormFieldResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "FormField": {
              "$ref": "#/definitions/FormField"
            }
          }
        }
      ]
    },
    "HeaderFootersResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "HeaderFooters": {
              "$ref": "#/definitions/HeaderFooterLinkCollection"
            }
          }
        }
      ]
    },
    "HeaderFooterLinkCollection": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "List": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HeaderFooterLink"
              }
            }
          }
        }
      ]
    },
    "HeaderFooterLink": {
      "type": "null",
      "discriminator": "Type",
      "additionalProperties": false,
      "required": [
        "Type"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "Type": {
              "enum": [
                "HeaderEven",
                "HeaderPrimary",
                "FooterEven",
                "FooterPrimary",
                "HeaderFirst",
                "FooterFirst"
              ]
            }
          }
        }
      ]
    },
    "HeaderFooterResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "HeaderFooter": {
              "$ref": "#/definitions/HeaderFooter"
            }
          }
        }
      ]
    },
    "HeaderFooter": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/HeaderFooterLink"
        },
        {
          "type": "object",
          "properties": {
            "DrawingObjects": {
              "$ref": "#/definitions/LinkElement"
            },
            "Paragraphs": {
              "$ref": "#/definitions/LinkElement"
            }
          }
        }
      ]
    },
    "HyperlinksResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Hyperlinks": {
              "$ref": "#/definitions/Hyperlinks"
            }
          }
        }
      ]
    },
    "Hyperlinks": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "HyperlinkList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Hyperlink"
              }
            }
          }
        }
      ]
    },
    "Hyperlink": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "DisplayText": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          }
        }
      ]
    },
    "HyperlinkResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Hyperlink": {
              "$ref": "#/definitions/Hyperlink"
            }
          }
        }
      ]
    },
    "OfficeMathObjectsResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "OfficeMathObjects": {
              "$ref": "#/definitions/OfficeMathObjectsCollection"
            }
          }
        }
      ]
    },
    "OfficeMathObjectsCollection": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "List": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OfficeMathObject"
              }
            }
          }
        }
      ]
    },
    "OfficeMathObject": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/OfficeMathLink"
        },
        {
          "type": "object",
          "properties": {
            "Content": {
              "$ref": "#/definitions/StoryChildNodes"
            },
            "DisplayType": {
              "enum": [
                "Display",
                "Inline"
              ]
            },
            "Justification": {
              "enum": [
                "CenterGroup",
                "Default",
                "Center",
                "Left",
                "Right",
                "Inline"
              ]
            },
            "MathObjectType": {
              "enum": [
                "OMath",
                "OMathPara",
                "Accent",
                "Bar",
                "BorderBox",
                "Box",
                "Delimiter",
                "Degree",
                "Argument",
                "Array",
                "Fraction",
                "Denominator",
                "Numerator",
                "Function",
                "FunctionName",
                "GroupCharacter",
                "Limit",
                "LowerLimit",
                "UpperLimit",
                "Matrix",
                "MatrixRow",
                "NAry",
                "Phantom",
                "Radical",
                "SubscriptPart",
                "SuperscriptPart",
                "PreSubSuperscript",
                "Subscript",
                "SubSuperscript",
                "Supercript"
              ]
            }
          }
        }
      ]
    },
    "OfficeMathLink": {
      "type": "null",
      "discriminator": "Type",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/NodeLink"
        },
        {
          "type": "object"
        }
      ]
    },
    "OfficeMathObjectResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "OfficeMathObject": {
              "$ref": "#/definitions/OfficeMathObject"
            }
          }
        }
      ]
    },
    "ParagraphLinkCollectionResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Paragraphs": {
              "$ref": "#/definitions/ParagraphLinkCollection"
            }
          }
        }
      ]
    },
    "ParagraphLinkCollection": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "ParagraphLinkList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParagraphLink"
              }
            }
          }
        }
      ]
    },
    "ParagraphLink": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/NodeLink"
        },
        {
          "type": "object",
          "properties": {
            "Text": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ParagraphResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Paragraph": {
              "$ref": "#/definitions/Paragraph"
            }
          }
        }
      ]
    },
    "Paragraph": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/NodeLink"
        },
        {
          "type": "object",
          "properties": {
            "ChildNodes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NodeLink"
              }
            }
          }
        }
      ]
    },
    "ParagraphInsert": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Text": {
          "type": "string"
        }
      }
    },
    "RunsResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Runs": {
              "$ref": "#/definitions/Runs"
            }
          }
        }
      ]
    },
    "Runs": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "List": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Run"
              }
            }
          }
        }
      ]
    },
    "Run": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/RunLink"
        },
        {
          "type": "object"
        }
      ]
    },
    "RunLink": {
      "type": "null",
      "discriminator": "Type",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/NodeLink"
        },
        {
          "type": "object",
          "properties": {
            "Text": {
              "type": "string"
            }
          }
        }
      ]
    },
    "RunResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Run": {
              "$ref": "#/definitions/Run"
            }
          }
        }
      ]
    },
    "FontResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Font": {
              "$ref": "#/definitions/Font"
            }
          }
        }
      ]
    },
    "Font": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "AllCaps": {
              "type": "boolean"
            },
            "Bidi": {
              "type": "boolean"
            },
            "Bold": {
              "type": "boolean"
            },
            "BoldBi": {
              "type": "boolean"
            },
            "Border": {
              "$ref": "#/definitions/Border"
            },
            "Color": {
              "$ref": "#/definitions/XmlColor"
            },
            "ComplexScript": {
              "type": "boolean"
            },
            "DoubleStrikeThrough": {
              "type": "boolean"
            },
            "Emboss": {
              "type": "boolean"
            },
            "Engrave": {
              "type": "boolean"
            },
            "Hidden": {
              "type": "boolean"
            },
            "HighlightColor": {
              "$ref": "#/definitions/XmlColor"
            },
            "Italic": {
              "type": "boolean"
            },
            "ItalicBi": {
              "type": "boolean"
            },
            "Kerning": {
              "type": "number",
              "format": "double"
            },
            "LocaleId": {
              "type": "integer",
              "format": "int32"
            },
            "LocaleIdBi": {
              "type": "integer",
              "format": "int32"
            },
            "LocaleIdFarEast": {
              "type": "integer",
              "format": "int32"
            },
            "Name": {
              "type": "string"
            },
            "NameAscii": {
              "type": "string"
            },
            "NameBi": {
              "type": "string"
            },
            "NameFarEast": {
              "type": "string"
            },
            "NameOther": {
              "type": "string"
            },
            "NoProofing": {
              "type": "boolean"
            },
            "Outline": {
              "type": "boolean"
            },
            "Position": {
              "type": "number",
              "format": "double"
            },
            "Scaling": {
              "type": "integer",
              "format": "int32"
            },
            "Shadow": {
              "type": "boolean"
            },
            "Size": {
              "type": "number",
              "format": "double"
            },
            "SizeBi": {
              "type": "number",
              "format": "double"
            },
            "SmallCaps": {
              "type": "boolean"
            },
            "Spacing": {
              "type": "number",
              "format": "double"
            },
            "StrikeThrough": {
              "type": "boolean"
            },
            "StyleIdentifier": {
              "enum": [
                "Normal",
                "Heading1",
                "Heading2",
                "Heading3",
                "Heading4",
                "Heading5",
                "Heading6",
                "Heading7",
                "Heading8",
                "Heading9",
                "Index1",
                "Index2",
                "Index3",
                "Index4",
                "Index5",
                "Index6",
                "Index7",
                "Index8",
                "Index9",
                "Toc1",
                "Toc2",
                "Toc3",
                "Toc4",
                "Toc5",
                "Toc6",
                "Toc7",
                "Toc8",
                "Toc9",
                "NormalIndent",
                "FootnoteText",
                "CommentText",
                "Header",
                "Footer",
                "IndexHeading",
                "Caption",
                "TableOfFigures",
                "EnvelopeAddress",
                "EnvelopeReturn",
                "FootnoteReference",
                "CommentReference",
                "LineNumber",
                "PageNumber",
                "EndnoteReference",
                "EndnoteText",
                "TableOfAuthorities",
                "Macro",
                "ToaHeading",
                "List",
                "ListBullet",
                "ListNumber",
                "List2",
                "List3",
                "List4",
                "List5",
                "ListBullet2",
                "ListBullet3",
                "ListBullet4",
                "ListBullet5",
                "ListNumber2",
                "ListNumber3",
                "ListNumber4",
                "ListNumber5",
                "Title",
                "Closing",
                "Signature",
                "DefaultParagraphFont",
                "BodyText",
                "BodyTextInd",
                "ListContinue",
                "ListContinue2",
                "ListContinue3",
                "ListContinue4",
                "ListContinue5",
                "MessageHeader",
                "Subtitle",
                "Salutation",
                "Date",
                "BodyText1I",
                "BodyText1I2",
                "NoteHeading",
                "BodyText2",
                "BodyText3",
                "BodyTextInd2",
                "BodyTextInd3",
                "BlockText",
                "Hyperlink",
                "FollowedHyperlink",
                "Strong",
                "Emphasis",
                "DocumentMap",
                "PlainText",
                "EmailSignature",
                "HtmlTopOfForm",
                "HtmlBottomOfForm",
                "NormalWeb",
                "HtmlAcronym",
                "HtmlAddress",
                "HtmlCite",
                "HtmlCode",
                "HtmlDefinition",
                "HtmlKeyboard",
                "HtmlPreformatted",
                "HtmlSample",
                "HtmlTypewriter",
                "HtmlVariable",
                "TableNormal",
                "CommentSubject",
                "NoList",
                "OutlineList1",
                "OutlineList2",
                "OutlineList3",
                "TableSimple1",
                "TableSimple2",
                "TableSimple3",
                "TableClassic1",
                "TableClassic2",
                "TableClassic3",
                "TableClassic4",
                "TableColorful1",
                "TableColorful2",
                "TableColorful3",
                "TableColumns1",
                "TableColumns2",
                "TableColumns3",
                "TableColumns4",
                "TableColumns5",
                "TableGrid1",
                "TableGrid2",
                "TableGrid3",
                "TableGrid4",
                "TableGrid5",
                "TableGrid6",
                "TableGrid7",
                "TableGrid8",
                "TableList1",
                "TableList2",
                "TableList3",
                "TableList4",
                "TableList5",
                "TableList6",
                "TableList7",
                "TableList8",
                "Table3DEffects1",
                "Table3DEffects2",
                "Table3DEffects3",
                "TableContemporary",
                "TableElegant",
                "TableProfessional",
                "TableSubtle1",
                "TableSubtle2",
                "TableWeb1",
                "TableWeb2",
                "TableWeb3",
                "BalloonText",
                "TableGrid",
                "TableTheme",
                "PlaceholderText",
                "NoSpacing",
                "LightShading",
                "LightList",
                "LightGrid",
                "MediumShading1",
                "MediumShading2",
                "MediumList1",
                "MediumList2",
                "MediumGrid1",
                "MediumGrid2",
                "MediumGrid3",
                "DarkList",
                "ColorfulShading",
                "ColorfulList",
                "ColorfulGrid",
                "LightShadingAccent1",
                "LightListAccent1",
                "LightGridAccent1",
                "MediumShading1Accent1",
                "MediumShading2Accent1",
                "MediumList1Accent1",
                "Revision",
                "ListParagraph",
                "Quote",
                "IntenseQuote",
                "MediumList2Accent1",
                "MediumGrid1Accent1",
                "MediumGrid2Accent1",
                "MediumGrid3Accent1",
                "DarkListAccent1",
                "ColorfulShadingAccent1",
                "ColorfulListAccent1",
                "ColorfulGridAccent1",
                "LightShadingAccent2",
                "LightListAccent2",
                "LightGridAccent2",
                "MediumShading1Accent2",
                "MediumShading2Accent2",
                "MediumList1Accent2",
                "MediumList2Accent2",
                "MediumGrid1Accent2",
                "MediumGrid2Accent2",
                "MediumGrid3Accent2",
                "DarkListAccent2",
                "ColorfulShadingAccent2",
                "ColorfulListAccent2",
                "ColorfulGridAccent2",
                "LightShadingAccent3",
                "LightListAccent3",
                "LightGridAccent3",
                "MediumShading1Accent3",
                "MediumShading2Accent3",
                "MediumList1Accent3",
                "MediumList2Accent3",
                "MediumGrid1Accent3",
                "MediumGrid2Accent3",
                "MediumGrid3Accent3",
                "DarkListAccent3",
                "ColorfulShadingAccent3",
                "ColorfulListAccent3",
                "ColorfulGridAccent3",
                "LightShadingAccent4",
                "LightListAccent4",
                "LightGridAccent4",
                "MediumShading1Accent4",
                "MediumShading2Accent4",
                "MediumList1Accent4",
                "MediumList2Accent4",
                "MediumGrid1Accent4",
                "MediumGrid2Accent4",
                "MediumGrid3Accent4",
                "DarkListAccent4",
                "ColorfulShadingAccent4",
                "ColorfulListAccent4",
                "ColorfulGridAccent4",
                "LightShadingAccent5",
                "LightListAccent5",
                "LightGridAccent5",
                "MediumShading1Accent5",
                "MediumShading2Accent5",
                "MediumList1Accent5",
                "MediumList2Accent5",
                "MediumGrid1Accent5",
                "MediumGrid2Accent5",
                "MediumGrid3Accent5",
                "DarkListAccent5",
                "ColorfulShadingAccent5",
                "ColorfulListAccent5",
                "ColorfulGridAccent5",
                "LightShadingAccent6",
                "LightListAccent6",
                "LightGridAccent6",
                "MediumShading1Accent6",
                "MediumShading2Accent6",
                "MediumList1Accent6",
                "MediumList2Accent6",
                "MediumGrid1Accent6",
                "MediumGrid2Accent6",
                "MediumGrid3Accent6",
                "DarkListAccent6",
                "ColorfulShadingAccent6",
                "ColorfulListAccent6",
                "ColorfulGridAccent6",
                "SubtleEmphasis",
                "IntenseEmphasis",
                "SubtleReference",
                "IntenseReference",
                "BookTitle",
                "Bibliography",
                "TocHeading",
                "PlainTable1",
                "PlainTable2",
                "PlainTable3",
                "PlainTable4",
                "PlainTable5",
                "TableGridLight",
                "GridTable1Light",
                "GridTable2",
                "GridTable3",
                "GridTable4",
                "GridTable5Dark",
                "GridTable6Colorful",
                "GridTable7Colorful",
                "GridTable1LightAccent1",
                "GridTable2Accent1",
                "GridTable3Accent1",
                "GridTable4Accent1",
                "GridTable5DarkAccent1",
                "GridTable6ColorfulAccent1",
                "GridTable7ColorfulAccent1",
                "GridTable1LightAccent2",
                "GridTable2Accent2",
                "GridTable3Accent2",
                "GridTable4Accent2",
                "GridTable5DarkAccent2",
                "GridTable6ColorfulAccent2",
                "GridTable7ColorfulAccent2",
                "GridTable1LightAccent3",
                "GridTable2Accent3",
                "GridTable3Accent3",
                "GridTable4Accent3",
                "GridTable5DarkAccent3",
                "GridTable6ColorfulAccent3",
                "GridTable7ColorfulAccent3",
                "GridTable1LightAccent4",
                "GridTable2Accent4",
                "GridTable3Accent4",
                "GridTable4Accent4",
                "GridTable5DarkAccent4",
                "GridTable6ColorfulAccent4",
                "GridTable7ColorfulAccent4",
                "GridTable1LightAccent5",
                "GridTable2Accent5",
                "GridTable3Accent5",
                "GridTable4Accent5",
                "GridTable5DarkAccent5",
                "GridTable6ColorfulAccent5",
                "GridTable7ColorfulAccent5",
                "GridTable1LightAccent6",
                "GridTable2Accent6",
                "GridTable3Accent6",
                "GridTable4Accent6",
                "GridTable5DarkAccent6",
                "GridTable6ColorfulAccent6",
                "GridTable7ColorfulAccent6",
                "ListTable1Light",
                "ListTable2",
                "ListTable3",
                "ListTable4",
                "ListTable5Dark",
                "ListTable6Colorful",
                "ListTable7Colorful",
                "ListTable1LightAccent1",
                "ListTable2Accent1",
                "ListTable3Accent1",
                "ListTable4Accent1",
                "ListTable5DarkAccent1",
                "ListTable6ColorfulAccent1",
                "ListTable7ColorfulAccent1",
                "ListTable1LightAccent2",
                "ListTable2Accent2",
                "ListTable3Accent2",
                "ListTable4Accent2",
                "ListTable5DarkAccent2",
                "ListTable6ColorfulAccent2",
                "ListTable7ColorfulAccent2",
                "ListTable1LightAccent3",
                "ListTable2Accent3",
                "ListTable3Accent3",
                "ListTable4Accent3",
                "ListTable5DarkAccent3",
                "ListTable6ColorfulAccent3",
                "ListTable7ColorfulAccent3",
                "ListTable1LightAccent4",
                "ListTable2Accent4",
                "ListTable3Accent4",
                "ListTable4Accent4",
                "ListTable5DarkAccent4",
                "ListTable6ColorfulAccent4",
                "ListTable7ColorfulAccent4",
                "ListTable1LightAccent5",
                "ListTable2Accent5",
                "ListTable3Accent5",
                "ListTable4Accent5",
                "ListTable5DarkAccent5",
                "ListTable6ColorfulAccent5",
                "ListTable7ColorfulAccent5",
                "ListTable1LightAccent6",
                "ListTable2Accent6",
                "ListTable3Accent6",
                "ListTable4Accent6",
                "ListTable5DarkAccent6",
                "ListTable6ColorfulAccent6",
                "ListTable7ColorfulAccent6",
                "User",
                "Nil"
              ]
            },
            "StyleName": {
              "type": "string"
            },
            "Subscript": {
              "type": "boolean"
            },
            "Superscript": {
              "type": "boolean"
            },
            "TextEffect": {
              "enum": [
                "None",
                "LasVegasLights",
                "BlinkingBackground",
                "SparkleText",
                "MarchingBlackAnts",
                "MarchingRedAnts",
                "Shimmer"
              ]
            },
            "Underline": {
              "enum": [
                "None",
                "Single",
                "Words",
                "Double",
                "Dotted",
                "Thick",
                "Dash",
                "DotDash",
                "DotDotDash",
                "Wavy",
                "DottedHeavy",
                "DashHeavy",
                "DotDashHeavy",
                "DotDotDashHeavy",
                "WavyHeavy",
                "DashLong",
                "WavyDouble",
                "DashLongHeavy"
              ]
            },
            "UnderlineColor": {
              "$ref": "#/definitions/XmlColor"
            }
          }
        }
      ]
    },
    "SectionLinkCollectionResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Sections": {
              "$ref": "#/definitions/SectionLinkCollection"
            }
          }
        }
      ]
    },
    "SectionLinkCollection": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "SectionLinkList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SectionLink"
              }
            }
          }
        }
      ]
    },
    "SectionLink": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object"
        }
      ]
    },
    "SectionResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Section": {
              "$ref": "#/definitions/Section"
            }
          }
        }
      ]
    },
    "Section": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "ChildNodes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NodeLink"
              }
            },
            "HeaderFooters": {
              "$ref": "#/definitions/LinkElement"
            },
            "PageSetup": {
              "$ref": "#/definitions/LinkElement"
            },
            "Paragraphs": {
              "$ref": "#/definitions/LinkElement"
            },
            "Tables": {
              "$ref": "#/definitions/LinkElement"
            }
          }
        }
      ]
    },
    "SectionPageSetupResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "PageSetup": {
              "$ref": "#/definitions/PageSetup"
            }
          }
        }
      ]
    },
    "PageSetup": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "Bidi": {
              "type": "boolean"
            },
            "BorderAlwaysInFront": {
              "type": "boolean"
            },
            "BorderAppliesTo": {
              "enum": [
                "AllPages",
                "FirstPage",
                "OtherPages"
              ]
            },
            "BorderDistanceFrom": {
              "enum": [
                "Text",
                "PageEdge"
              ]
            },
            "BottomMargin": {
              "type": "number",
              "format": "double"
            },
            "DifferentFirstPageHeaderFooter": {
              "type": "boolean"
            },
            "FirstPageTray": {
              "type": "integer",
              "format": "int32"
            },
            "FooterDistance": {
              "type": "number",
              "format": "double"
            },
            "Gutter": {
              "type": "number",
              "format": "double"
            },
            "HeaderDistance": {
              "type": "number",
              "format": "double"
            },
            "LeftMargin": {
              "type": "number",
              "format": "double"
            },
            "LineNumberCountBy": {
              "type": "integer",
              "format": "int32"
            },
            "LineNumberDistanceFromText": {
              "type": "number",
              "format": "double"
            },
            "LineNumberRestartMode": {
              "enum": [
                "RestartPage",
                "RestartSection",
                "Continuous"
              ]
            },
            "LineStartingNumber": {
              "type": "integer",
              "format": "int32"
            },
            "Orientation": {
              "enum": [
                "Portrait",
                "Landscape"
              ]
            },
            "OtherPagesTray": {
              "type": "integer",
              "format": "int32"
            },
            "PageHeight": {
              "type": "number",
              "format": "double"
            },
            "PageNumberStyle": {
              "enum": [
                "Arabic",
                "UppercaseRoman",
                "LowercaseRoman",
                "UppercaseLetter",
                "LowercaseLetter",
                "Ordinal",
                "Number",
                "OrdinalText",
                "Hex",
                "ChicagoManual",
                "Kanji",
                "KanjiDigit",
                "AiueoHalfWidth",
                "IrohaHalfWidth",
                "ArabicFullWidth",
                "ArabicHalfWidth",
                "KanjiTraditional",
                "KanjiTraditional2",
                "NumberInCircle",
                "DecimalFullWidth",
                "Aiueo",
                "Iroha",
                "LeadingZero",
                "Bullet",
                "Ganada",
                "Chosung",
                "GB1",
                "GB2",
                "GB3",
                "GB4",
                "Zodiac1",
                "Zodiac2",
                "Zodiac3",
                "TradChinNum1",
                "TradChinNum2",
                "TradChinNum3",
                "TradChinNum4",
                "SimpChinNum1",
                "SimpChinNum2",
                "SimpChinNum3",
                "SimpChinNum4",
                "HanjaRead",
                "HanjaReadDigit",
                "Hangul",
                "Hanja",
                "Hebrew1",
                "Arabic1",
                "Hebrew2",
                "Arabic2",
                "HindiLetter1",
                "HindiLetter2",
                "HindiArabic",
                "HindiCardinalText",
                "ThaiLetter",
                "ThaiArabic",
                "ThaiCardinalText",
                "VietCardinalText",
                "NumberInDash",
                "LowercaseRussian",
                "UppercaseRussian",
                "None",
                "Custom"
              ]
            },
            "PageStartingNumber": {
              "type": "integer",
              "format": "int32"
            },
            "PageWidth": {
              "type": "number",
              "format": "double"
            },
            "PaperSize": {
              "enum": [
                "A3",
                "A4",
                "A5",
                "B4",
                "B5",
                "Executive",
                "Folio",
                "Ledger",
                "Legal",
                "Letter",
                "EnvelopeDL",
                "Quarto",
                "Statement",
                "Tabloid",
                "Paper10x14",
                "Paper11x17",
                "Custom"
              ]
            },
            "RestartPageNumbering": {
              "type": "boolean"
            },
            "RightMargin": {
              "type": "number",
              "format": "double"
            },
            "RtlGutter": {
              "type": "boolean"
            },
            "SectionStart": {
              "enum": [
                "Continuous",
                "NewColumn",
                "NewPage",
                "EvenPage",
                "OddPage"
              ]
            },
            "SuppressEndnotes": {
              "type": "boolean"
            },
            "TopMargin": {
              "type": "number",
              "format": "double"
            },
            "VerticalAlignment": {
              "enum": [
                "Top",
                "Center",
                "Justify",
                "Bottom"
              ]
            }
          }
        }
      ]
    },
    "TableLinkCollectionResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Tables": {
              "$ref": "#/definitions/TableLinkCollection"
            }
          }
        }
      ]
    },
    "TableLinkCollection": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "TableLinkList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TableLink"
              }
            }
          }
        }
      ]
    },
    "TableLink": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/NodeLink"
        },
        {
          "type": "object"
        }
      ]
    },
    "TableInsert": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ColumnsCount",
        "RowsCount"
      ],
      "properties": {
        "Postion": {
          "$ref": "#/definitions/DocumentPosition"
        },
        "ColumnsCount": {
          "type": "integer",
          "format": "int32"
        },
        "RowsCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TableResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Table": {
              "$ref": "#/definitions/Table"
            }
          }
        }
      ]
    },
    "Table": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/NodeLink"
        },
        {
          "type": "object",
          "properties": {
            "TableProperties": {
              "$ref": "#/definitions/TableProperties"
            },
            "TableRowList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TableRow"
              }
            }
          }
        }
      ]
    },
    "TableRow": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/NodeLink"
        },
        {
          "type": "object",
          "properties": {
            "RowFormat": {
              "$ref": "#/definitions/TableRowFormat"
            },
            "TableCellList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TableCell"
              }
            }
          }
        }
      ]
    },
    "TableCell": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/NodeLink"
        },
        {
          "type": "object",
          "properties": {
            "ChildNodes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NodeLink"
              }
            }
          }
        }
      ]
    },
    "TableRowFormat": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "AllowBreakAcrossPages": {
              "type": "boolean"
            },
            "HeadingFormat": {
              "type": "boolean"
            },
            "Height": {
              "type": "number",
              "format": "double"
            },
            "HeightRule": {
              "enum": [
                "AtLeast",
                "Exactly",
                "Auto"
              ]
            }
          }
        }
      ]
    },
    "TableProperties": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "Alignment": {
              "enum": [
                "Left",
                "Center",
                "Right"
              ]
            },
            "AllowAutoFit": {
              "type": "boolean"
            },
            "Bidi": {
              "type": "boolean"
            },
            "BottomPadding": {
              "type": "number",
              "format": "double"
            },
            "CellSpacing": {
              "type": "number",
              "format": "double"
            },
            "LeftIndent": {
              "type": "number",
              "format": "double"
            },
            "LeftPadding": {
              "type": "number",
              "format": "double"
            },
            "PreferredWidth": {
              "$ref": "#/definitions/PreferredWidth"
            },
            "RightPadding": {
              "type": "number",
              "format": "double"
            },
            "StyleIdentifier": {
              "enum": [
                "Normal",
                "Heading1",
                "Heading2",
                "Heading3",
                "Heading4",
                "Heading5",
                "Heading6",
                "Heading7",
                "Heading8",
                "Heading9",
                "Index1",
                "Index2",
                "Index3",
                "Index4",
                "Index5",
                "Index6",
                "Index7",
                "Index8",
                "Index9",
                "Toc1",
                "Toc2",
                "Toc3",
                "Toc4",
                "Toc5",
                "Toc6",
                "Toc7",
                "Toc8",
                "Toc9",
                "NormalIndent",
                "FootnoteText",
                "CommentText",
                "Header",
                "Footer",
                "IndexHeading",
                "Caption",
                "TableOfFigures",
                "EnvelopeAddress",
                "EnvelopeReturn",
                "FootnoteReference",
                "CommentReference",
                "LineNumber",
                "PageNumber",
                "EndnoteReference",
                "EndnoteText",
                "TableOfAuthorities",
                "Macro",
                "ToaHeading",
                "List",
                "ListBullet",
                "ListNumber",
                "List2",
                "List3",
                "List4",
                "List5",
                "ListBullet2",
                "ListBullet3",
                "ListBullet4",
                "ListBullet5",
                "ListNumber2",
                "ListNumber3",
                "ListNumber4",
                "ListNumber5",
                "Title",
                "Closing",
                "Signature",
                "DefaultParagraphFont",
                "BodyText",
                "BodyTextInd",
                "ListContinue",
                "ListContinue2",
                "ListContinue3",
                "ListContinue4",
                "ListContinue5",
                "MessageHeader",
                "Subtitle",
                "Salutation",
                "Date",
                "BodyText1I",
                "BodyText1I2",
                "NoteHeading",
                "BodyText2",
                "BodyText3",
                "BodyTextInd2",
                "BodyTextInd3",
                "BlockText",
                "Hyperlink",
                "FollowedHyperlink",
                "Strong",
                "Emphasis",
                "DocumentMap",
                "PlainText",
                "EmailSignature",
                "HtmlTopOfForm",
                "HtmlBottomOfForm",
                "NormalWeb",
                "HtmlAcronym",
                "HtmlAddress",
                "HtmlCite",
                "HtmlCode",
                "HtmlDefinition",
                "HtmlKeyboard",
                "HtmlPreformatted",
                "HtmlSample",
                "HtmlTypewriter",
                "HtmlVariable",
                "TableNormal",
                "CommentSubject",
                "NoList",
                "OutlineList1",
                "OutlineList2",
                "OutlineList3",
                "TableSimple1",
                "TableSimple2",
                "TableSimple3",
                "TableClassic1",
                "TableClassic2",
                "TableClassic3",
                "TableClassic4",
                "TableColorful1",
                "TableColorful2",
                "TableColorful3",
                "TableColumns1",
                "TableColumns2",
                "TableColumns3",
                "TableColumns4",
                "TableColumns5",
                "TableGrid1",
                "TableGrid2",
                "TableGrid3",
                "TableGrid4",
                "TableGrid5",
                "TableGrid6",
                "TableGrid7",
                "TableGrid8",
                "TableList1",
                "TableList2",
                "TableList3",
                "TableList4",
                "TableList5",
                "TableList6",
                "TableList7",
                "TableList8",
                "Table3DEffects1",
                "Table3DEffects2",
                "Table3DEffects3",
                "TableContemporary",
                "TableElegant",
                "TableProfessional",
                "TableSubtle1",
                "TableSubtle2",
                "TableWeb1",
                "TableWeb2",
                "TableWeb3",
                "BalloonText",
                "TableGrid",
                "TableTheme",
                "PlaceholderText",
                "NoSpacing",
                "LightShading",
                "LightList",
                "LightGrid",
                "MediumShading1",
                "MediumShading2",
                "MediumList1",
                "MediumList2",
                "MediumGrid1",
                "MediumGrid2",
                "MediumGrid3",
                "DarkList",
                "ColorfulShading",
                "ColorfulList",
                "ColorfulGrid",
                "LightShadingAccent1",
                "LightListAccent1",
                "LightGridAccent1",
                "MediumShading1Accent1",
                "MediumShading2Accent1",
                "MediumList1Accent1",
                "Revision",
                "ListParagraph",
                "Quote",
                "IntenseQuote",
                "MediumList2Accent1",
                "MediumGrid1Accent1",
                "MediumGrid2Accent1",
                "MediumGrid3Accent1",
                "DarkListAccent1",
                "ColorfulShadingAccent1",
                "ColorfulListAccent1",
                "ColorfulGridAccent1",
                "LightShadingAccent2",
                "LightListAccent2",
                "LightGridAccent2",
                "MediumShading1Accent2",
                "MediumShading2Accent2",
                "MediumList1Accent2",
                "MediumList2Accent2",
                "MediumGrid1Accent2",
                "MediumGrid2Accent2",
                "MediumGrid3Accent2",
                "DarkListAccent2",
                "ColorfulShadingAccent2",
                "ColorfulListAccent2",
                "ColorfulGridAccent2",
                "LightShadingAccent3",
                "LightListAccent3",
                "LightGridAccent3",
                "MediumShading1Accent3",
                "MediumShading2Accent3",
                "MediumList1Accent3",
                "MediumList2Accent3",
                "MediumGrid1Accent3",
                "MediumGrid2Accent3",
                "MediumGrid3Accent3",
                "DarkListAccent3",
                "ColorfulShadingAccent3",
                "ColorfulListAccent3",
                "ColorfulGridAccent3",
                "LightShadingAccent4",
                "LightListAccent4",
                "LightGridAccent4",
                "MediumShading1Accent4",
                "MediumShading2Accent4",
                "MediumList1Accent4",
                "MediumList2Accent4",
                "MediumGrid1Accent4",
                "MediumGrid2Accent4",
                "MediumGrid3Accent4",
                "DarkListAccent4",
                "ColorfulShadingAccent4",
                "ColorfulListAccent4",
                "ColorfulGridAccent4",
                "LightShadingAccent5",
                "LightListAccent5",
                "LightGridAccent5",
                "MediumShading1Accent5",
                "MediumShading2Accent5",
                "MediumList1Accent5",
                "MediumList2Accent5",
                "MediumGrid1Accent5",
                "MediumGrid2Accent5",
                "MediumGrid3Accent5",
                "DarkListAccent5",
                "ColorfulShadingAccent5",
                "ColorfulListAccent5",
                "ColorfulGridAccent5",
                "LightShadingAccent6",
                "LightListAccent6",
                "LightGridAccent6",
                "MediumShading1Accent6",
                "MediumShading2Accent6",
                "MediumList1Accent6",
                "MediumList2Accent6",
                "MediumGrid1Accent6",
                "MediumGrid2Accent6",
                "MediumGrid3Accent6",
                "DarkListAccent6",
                "ColorfulShadingAccent6",
                "ColorfulListAccent6",
                "ColorfulGridAccent6",
                "SubtleEmphasis",
                "IntenseEmphasis",
                "SubtleReference",
                "IntenseReference",
                "BookTitle",
                "Bibliography",
                "TocHeading",
                "PlainTable1",
                "PlainTable2",
                "PlainTable3",
                "PlainTable4",
                "PlainTable5",
                "TableGridLight",
                "GridTable1Light",
                "GridTable2",
                "GridTable3",
                "GridTable4",
                "GridTable5Dark",
                "GridTable6Colorful",
                "GridTable7Colorful",
                "GridTable1LightAccent1",
                "GridTable2Accent1",
                "GridTable3Accent1",
                "GridTable4Accent1",
                "GridTable5DarkAccent1",
                "GridTable6ColorfulAccent1",
                "GridTable7ColorfulAccent1",
                "GridTable1LightAccent2",
                "GridTable2Accent2",
                "GridTable3Accent2",
                "GridTable4Accent2",
                "GridTable5DarkAccent2",
                "GridTable6ColorfulAccent2",
                "GridTable7ColorfulAccent2",
                "GridTable1LightAccent3",
                "GridTable2Accent3",
                "GridTable3Accent3",
                "GridTable4Accent3",
                "GridTable5DarkAccent3",
                "GridTable6ColorfulAccent3",
                "GridTable7ColorfulAccent3",
                "GridTable1LightAccent4",
                "GridTable2Accent4",
                "GridTable3Accent4",
                "GridTable4Accent4",
                "GridTable5DarkAccent4",
                "GridTable6ColorfulAccent4",
                "GridTable7ColorfulAccent4",
                "GridTable1LightAccent5",
                "GridTable2Accent5",
                "GridTable3Accent5",
                "GridTable4Accent5",
                "GridTable5DarkAccent5",
                "GridTable6ColorfulAccent5",
                "GridTable7ColorfulAccent5",
                "GridTable1LightAccent6",
                "GridTable2Accent6",
                "GridTable3Accent6",
                "GridTable4Accent6",
                "GridTable5DarkAccent6",
                "GridTable6ColorfulAccent6",
                "GridTable7ColorfulAccent6",
                "ListTable1Light",
                "ListTable2",
                "ListTable3",
                "ListTable4",
                "ListTable5Dark",
                "ListTable6Colorful",
                "ListTable7Colorful",
                "ListTable1LightAccent1",
                "ListTable2Accent1",
                "ListTable3Accent1",
                "ListTable4Accent1",
                "ListTable5DarkAccent1",
                "ListTable6ColorfulAccent1",
                "ListTable7ColorfulAccent1",
                "ListTable1LightAccent2",
                "ListTable2Accent2",
                "ListTable3Accent2",
                "ListTable4Accent2",
                "ListTable5DarkAccent2",
                "ListTable6ColorfulAccent2",
                "ListTable7ColorfulAccent2",
                "ListTable1LightAccent3",
                "ListTable2Accent3",
                "ListTable3Accent3",
                "ListTable4Accent3",
                "ListTable5DarkAccent3",
                "ListTable6ColorfulAccent3",
                "ListTable7ColorfulAccent3",
                "ListTable1LightAccent4",
                "ListTable2Accent4",
                "ListTable3Accent4",
                "ListTable4Accent4",
                "ListTable5DarkAccent4",
                "ListTable6ColorfulAccent4",
                "ListTable7ColorfulAccent4",
                "ListTable1LightAccent5",
                "ListTable2Accent5",
                "ListTable3Accent5",
                "ListTable4Accent5",
                "ListTable5DarkAccent5",
                "ListTable6ColorfulAccent5",
                "ListTable7ColorfulAccent5",
                "ListTable1LightAccent6",
                "ListTable2Accent6",
                "ListTable3Accent6",
                "ListTable4Accent6",
                "ListTable5DarkAccent6",
                "ListTable6ColorfulAccent6",
                "ListTable7ColorfulAccent6",
                "User",
                "Nil"
              ]
            },
            "StyleName": {
              "type": "string"
            },
            "StyleOptions": {
              "enum": [
                "None",
                "FirstRow",
                "LastRow",
                "FirstColumn",
                "LastColumn",
                "RowBands",
                "Default",
                "ColumnBands",
                "Default2003"
              ]
            },
            "TextWrapping": {
              "enum": [
                "Default",
                "None",
                "Around"
              ]
            },
            "TopPadding": {
              "type": "number",
              "format": "double"
            }
          }
        }
      ]
    },
    "PreferredWidth": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Type"
      ],
      "properties": {
        "Type": {
          "enum": [
            "Auto",
            "Percent",
            "Points"
          ]
        },
        "Value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "TablePropertiesResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Properties": {
              "$ref": "#/definitions/TableProperties"
            }
          }
        }
      ]
    },
    "TableRowResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Row": {
              "$ref": "#/definitions/TableRow"
            }
          }
        }
      ]
    },
    "TableRowInsert": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ColumnsCount"
      ],
      "properties": {
        "InsertAfter": {
          "type": "integer",
          "format": "int32"
        },
        "ColumnsCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TableRowFormatResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "RowFormat": {
              "$ref": "#/definitions/TableRowFormat"
            }
          }
        }
      ]
    },
    "TableCellResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Cell": {
              "$ref": "#/definitions/TableCell"
            }
          }
        }
      ]
    },
    "TableCellInsert": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "InsertAfter": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TableCellFormatResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "CellFormat": {
              "$ref": "#/definitions/TableCellFormat"
            }
          }
        }
      ]
    },
    "TableCellFormat": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "BottomPadding": {
              "type": "number",
              "format": "double"
            },
            "FitText": {
              "type": "boolean"
            },
            "HorizontalMerge": {
              "enum": [
                "None",
                "First",
                "Previous"
              ]
            },
            "LeftPadding": {
              "type": "number",
              "format": "double"
            },
            "Orientation": {
              "enum": [
                "Horizontal",
                "Downward",
                "Upward",
                "HorizontalRotatedFarEast",
                "VerticalFarEast",
                "VerticalRotatedFarEast"
              ]
            },
            "PreferredWidth": {
              "$ref": "#/definitions/PreferredWidth"
            },
            "RightPadding": {
              "type": "number",
              "format": "double"
            },
            "TopPadding": {
              "type": "number",
              "format": "double"
            },
            "VerticalAlignment": {
              "enum": [
                "Top",
                "Center",
                "Bottom"
              ]
            },
            "VerticalMerge": {
              "enum": [
                "None",
                "First",
                "Previous"
              ]
            },
            "Width": {
              "type": "number",
              "format": "double"
            },
            "WrapText": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "TextItemsResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "TextItems": {
              "$ref": "#/definitions/TextItems"
            }
          }
        }
      ]
    },
    "TextItems": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "List": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TextItem"
              }
            }
          }
        }
      ]
    },
    "TextItem": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "Text": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ReplaceTextRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "IsMatchCase",
        "IsMatchWholeWord",
        "IsOldValueRegex"
      ],
      "properties": {
        "OldValue": {
          "type": "string"
        },
        "NewValue": {
          "type": "string"
        },
        "IsMatchCase": {
          "type": "boolean"
        },
        "IsMatchWholeWord": {
          "type": "boolean"
        },
        "IsOldValueRegex": {
          "type": "boolean"
        }
      }
    },
    "ReplaceTextResponse": {
      "type": "null",
      "additionalProperties": false,
      "required": [
        "Matches"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "DocumentLink": {
              "$ref": "#/definitions/FileLink"
            },
            "Matches": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "FileLink": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/Link"
        },
        {
          "type": "object"
        }
      ]
    },
    "WatermarkText": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "RotationAngle"
      ],
      "properties": {
        "Text": {
          "type": "string"
        },
        "RotationAngle": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "DocumentEntryList": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DocumentEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentEntry"
          }
        }
      }
    },
    "DocumentEntry": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Href": {
          "type": "string"
        },
        "ImportFormatMode": {
          "type": "string"
        }
      }
    },
    "ClassificationResponse": {
      "type": "null",
      "additionalProperties": false,
      "required": [
        "BestClassProbability"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "BestClassName": {
              "type": "string"
            },
            "BestClassProbability": {
              "type": "number",
              "format": "double"
            },
            "BestResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClassificationResult"
              }
            }
          }
        }
      ]
    },
    "ClassificationResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ClassProbability"
      ],
      "properties": {
        "ClassName": {
          "type": "string"
        },
        "ClassProbability": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CompareData": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ComparingWithDocument": {
          "type": "string"
        },
        "Author": {
          "type": "string"
        },
        "DateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FieldNamesResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "FieldNames": {
              "$ref": "#/definitions/FieldNames"
            }
          }
        }
      ]
    },
    "FieldNames": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "Names": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "PageNumber": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "IsTop",
        "SetPageNumberOnFirstPage"
      ],
      "properties": {
        "Format": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "IsTop": {
          "type": "boolean"
        },
        "SetPageNumberOnFirstPage": {
          "type": "boolean"
        }
      }
    },
    "ProtectionDataResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "DocumentLink": {
              "$ref": "#/definitions/FileLink"
            },
            "ProtectionData": {
              "$ref": "#/definitions/ProtectionData"
            }
          }
        }
      ]
    },
    "ProtectionData": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ProtectionType": {
          "type": "string"
        }
      }
    },
    "ProtectionRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Password": {
          "type": "string"
        },
        "NewPassword": {
          "type": "string"
        },
        "ProtectionType": {
          "type": "string"
        }
      }
    },
    "RevisionsModificationResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "Result": {
              "$ref": "#/definitions/ModificationOperationResult"
            }
          }
        }
      ]
    },
    "ModificationOperationResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Source": {
          "$ref": "#/definitions/FileLink"
        },
        "Dest": {
          "$ref": "#/definitions/FileLink"
        }
      }
    },
    "SearchResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "SearchingPattern": {
              "type": "string"
            },
            "SearchResults": {
              "$ref": "#/definitions/SearchResultsCollection"
            }
          }
        }
      ]
    },
    "SearchResultsCollection": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/LinkElement"
        },
        {
          "type": "object",
          "properties": {
            "ResultsList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SearchResult"
              }
            }
          }
        }
      ]
    },
    "SearchResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "RangeStart": {
          "$ref": "#/definitions/DocumentPosition"
        },
        "RangeEnd": {
          "$ref": "#/definitions/DocumentPosition"
        }
      }
    },
    "SplitDocumentResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "SplitResult": {
              "$ref": "#/definitions/SplitDocumentResult"
            }
          }
        }
      ]
    },
    "SplitDocumentResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "SourceDocument": {
          "$ref": "#/definitions/FileLink"
        },
        "Pages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileLink"
          }
        },
        "ZippedPages": {
          "$ref": "#/definitions/FileLink"
        }
      }
    },
    "StatDataResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "DocumentLink": {
              "$ref": "#/definitions/FileLink"
            },
            "StatData": {
              "$ref": "#/definitions/DocumentStatData"
            }
          }
        }
      ]
    },
    "DocumentStatData": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "WordCount",
        "ParagraphCount",
        "PageCount"
      ],
      "properties": {
        "WordCount": {
          "type": "integer",
          "format": "int32"
        },
        "ParagraphCount": {
          "type": "integer",
          "format": "int32"
        },
        "PageCount": {
          "type": "integer",
          "format": "int32"
        },
        "FootnotesStatData": {
          "$ref": "#/definitions/FootnotesStatData"
        },
        "PageStatData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PageStatData"
          }
        }
      }
    },
    "FootnotesStatData": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "WordCount",
        "ParagraphCount"
      ],
      "properties": {
        "WordCount": {
          "type": "integer",
          "format": "int32"
        },
        "ParagraphCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PageStatData": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "PageNumber",
        "WordCount",
        "ParagraphCount"
      ],
      "properties": {
        "PageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "WordCount": {
          "type": "integer",
          "format": "int32"
        },
        "ParagraphCount": {
          "type": "integer",
          "format": "int32"
        },
        "FootnotesStatData": {
          "$ref": "#/definitions/FootnotesStatData"
        }
      }
    },
    "LoadWebDocumentData": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "LoadingDocumentUrl": {
          "type": "string"
        },
        "SaveOptions": {
          "$ref": "#/definitions/SaveOptionsData"
        }
      }
    },
    "SaveOptionsData": {
      "type": "object",
      "discriminator": "Type",
      "additionalProperties": false,
      "properties": {
        "ColorMode": {
          "type": "string"
        },
        "SaveFormat": {
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "DmlRenderingMode": {
          "type": "string"
        },
        "DmlEffectsRenderingMode": {
          "type": "string"
        },
        "ZipOutput": {
          "type": "boolean"
        },
        "UpdateLastSavedTimeProperty": {
          "type": "boolean"
        },
        "UpdateSdtContent": {
          "type": "boolean"
        },
        "UpdateFields": {
          "type": "boolean"
        }
      }
    },
    "SaveResponse": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AsposeResponse"
        },
        {
          "type": "object",
          "properties": {
            "SaveResult": {
              "$ref": "#/definitions/SaveResult"
            }
          }
        }
      ]
    },
    "SaveResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "SourceDocument": {
          "$ref": "#/definitions/FileLink"
        },
        "DestDocument": {
          "$ref": "#/definitions/FileLink"
        },
        "AdditionalItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileLink"
          }
        }
      }
    },
    "TiffSaveOptionsData": {
      "type": "null",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/ImageSaveOptionsData"
        },
        {
          "type": "object",
          "properties": {
            "TiffBinarizationMethod": {
              "type": "string"
            },
            "TiffCompression": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ImageSaveOptionsData": {
      "type": "null",
      "discriminator": "Type",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FixedPageSaveOptionsData"
        },
        {
          "type": "object",
          "properties": {
            "GraphicsQualityOptions": {
              "$ref": "#/definitions/GraphicsQualityOptionsData"
            },
            "HorizontalResolution": {
              "type": "number",
              "format": "double"
            },
            "ImageBrightness": {
              "type": "number",
              "format": "double"
            },
            "ImageColorMode": {
              "type": "string"
            },
            "ImageContrast": {
              "type": "number",
              "format": "double"
            },
            "PaperColor": {
              "type": "string"
            },
            "PixelFormat": {
              "type": "string"
            },
            "Resolution": {
              "type": "number",
              "format": "double"
            },
            "Scale": {
              "type": "number",
              "format": "double"
            },
            "UseAntiAliasing": {
              "type": "boolean"
            },
            "UseGdiEmfRenderer": {
              "type": "boolean"
            },
            "UseHighQualityRendering": {
              "type": "boolean"
            },
            "VerticalResolution": {
              "type": "number",
              "format": "double"
            }
          }
        }
      ]
    },
    "GraphicsQualityOptionsData": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CompositingMode": {
          "enum": [
            "SourceOver",
            "SourceCopy"
          ]
        },
        "CompositingQuality": {
          "enum": [
            "Default",
            "HighSpeed",
            "HighQuality",
            "GammaCorrected",
            "AssumeLinear",
            "Invalid"
          ]
        },
        "InterpolationMode": {
          "enum": [
            "Default",
            "Low",
            "High",
            "Bilinear",
            "Bicubic",
            "NearestNeighbor",
            "HighQualityBilinear",
            "HighQualityBicubic",
            "Invalid"
          ]
        },
        "SmoothingMode": {
          "enum": [
            "Default",
            "HighSpeed",
            "HighQuality",
            "None",
            "AntiAlias",
            "Invalid"
          ]
        },
        "StringFormat": {
          "$ref": "#/definitions/StringFormatData"
        },
        "TextRenderingHint": {
          "enum": [
            "SystemDefault",
            "SingleBitPerPixelGridFit",
            "SingleBitPerPixel",
            "AntiAliasGridFit",
            "AntiAlias",
            "ClearTypeGridFit"
          ]
        }
      }
    },
    "StringFormatData": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Alignment": {
          "enum": [
            "Near",
            "Center",
            "Far"
          ]
        },
        "FormatFlags": {
          "enum": [
            "DirectionRightToLeft",
            "DirectionVertical",
            "FitBlackBox",
            "DisplayFormatControl",
            "NoFontFallback",
            "MeasureTrailingSpaces",
            "NoWrap",
            "LineLimit",
            "NoClip"
          ]
        },
        "HotkeyPrefix": {
          "enum": [
            "None",
            "Show",
            "Hide"
          ]
        },
        "LineAlignment": {
          "enum": [
            "Near",
            "Center",
            "Far"
          ]
        },
        "Trimming": {
          "enum": [
            "None",
            "Character",
            "Word",
            "EllipsisCharacter",
            "EllipsisWord",
            "EllipsisPath"
          ]
        }
      }
    },
    "FixedPageSaveOptionsData": {
      "type": "null",
      "discriminator": "Type",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/SaveOptionsData"
        },
        {
          "type": "object",
          "properties": {
            "JpegQuality": {
              "type": "integer",
              "format": "int32"
            },
            "MetafileRenderingOptions": {
              "$ref": "#/definitions/MetafileRenderingOptionsData"
            },
            "NumeralFormat": {
              "type": "string"
            },
            "OptimizeOutput": {
              "type": "boolean"
            },
            "PageCount": {
              "type": "integer",
              "format": "int32"
            },
            "PageIndex": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "MetafileRenderingOptionsData": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "EmfPlusDualRenderingMode": {
          "type": "string"
        },
        "EmulateRasterOperations": {
          "type": "boolean"
        },
        "RenderingMode": {
          "type": "string"
        },
        "UseEmfEmbeddedToWmf": {
          "type": "boolean"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth": {
      "type": "oauth2",
      "flow": "application",
      "authorizationUrl": "localhost/oauth2/token"
    },
    "appsid": {
      "type": "apiKey",
      "name": "Appsid",
      "in": "query"
    },
    "signature": {
      "type": "apiKey",
      "name": "Signature",
      "in": "query"
    }
  }
}