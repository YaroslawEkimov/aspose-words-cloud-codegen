{{#operations}}/*
 * {{classname}}.h
 *
 * {{description}}
 */

#ifndef {{apiHeaderGuardPrefix}}_{{classname}}_H_
#define {{apiHeaderGuardPrefix}}_{{classname}}_H_

{{{defaultInclude}}}
#include "../ApiClient.h"

{{#operation}}
#include "requests/{{operationId}}Request.h"
{{/operation}}

{{#imports}}{{{import}}}
{{/imports}}
#undef U
#include <boost/optional.hpp>
{{#apiNamespaceDeclarations}}
namespace {{this}} {
{{/apiNamespaceDeclarations}}

using namespace {{modelNamespace}};

class {{declspec}} {{classname}}
{
public:
    {{#operation}}
    ///<summary>
    ///{{summary}}
    ///</summary>
    ///<remarks>
    ///{{notes}}
    ///</remarks>
    {{#allParams}}
    /// <param name="{{paramName}}">{{description}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}</param>
    {{/allParams}}
    pplx::task<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}void{{/returnType}}> {{operationId}}(
        std::shared_ptr<{{operationId}}Request> request
        );
    {{/operation}}

public:
    {{classname}}( std::shared_ptr<ApiClient> apiClient );
    virtual ~{{classname}}();
    
protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

{{#apiNamespaceDeclarations}}
}
{{/apiNamespaceDeclarations}}

#endif /* {{apiHeaderGuardPrefix}}_{{classname}}_H_ */

{{/operations}}

{{>requestModel_header}}